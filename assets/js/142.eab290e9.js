(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{862:function(a,e,t){"use strict";t.r(e);var r=t(6),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/Wvc0lkLpgyEW_u7bbMdvpQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("链接"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"缓存类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存类型"}},[a._v("#")]),a._v(" 缓存类型")]),a._v(" "),t("ol",[t("li",[a._v("强缓存")])]),a._v(" "),t("p",[a._v("浏览器在加载资源时，会先根据本地缓存资源的 header 中的信息判断是否命中强缓存，如果命中则直接使用缓存中的资源不会再向服务器发送请求。\n2. 协商缓存（对比缓存）")]),a._v(" "),t("h2",{attrs:{id:"强缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[a._v("#")]),a._v(" 强缓存")]),a._v(" "),t("h3",{attrs:{id:"expire"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expire"}},[a._v("#")]),a._v(" expire")]),a._v(" "),t("p",[a._v("表示缓存到期时间,是个绝对时间，也就是说，如果我修改了客户端的本地时间，是不是就会导致判断缓存失效")]),a._v(" "),t("h3",{attrs:{id:"cache-control"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[a._v("#")]),a._v(" cache-control")]),a._v(" "),t("p",[a._v("增加了一个字段 Cache-Control ，它包含一个 max-age 属性，该字段表示资源缓存的最大有效时间，这就是一个相对时间。")]),a._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[a._v("Cache"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Control"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("max"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("age"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("600")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("这个表示的就是最大有效时间是 600s ，对的，它的单位是秒")]),a._v(" "),t("p",[a._v("Cache-Control 除了 max-age 属性之外还有一些属性：")]),a._v(" "),t("ul",[t("li",[a._v("no-cache：需要进行协商缓存，发送请求到服务器确认是否使用缓存。")]),a._v(" "),t("li",[a._v("no-store：禁止使用缓存，每一次都要重新请求数据。")]),a._v(" "),t("li",[a._v("public：默认设置。")]),a._v(" "),t("li",[a._v("private：不能被多用户共享。")])]),a._v(" "),t("p",[a._v("cache-control优先级比expire大")]),a._v(" "),t("h2",{attrs:{id:"协商缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[a._v("#")]),a._v(" 协商缓存")]),a._v(" "),t("p",[a._v("当强缓存没有满足时，浏览器会发送一个请求到服务器，服务器根据请求头中的部分信息来判断是否命中缓存。如果命中，则返回 304 ，告诉浏览器资源未更新，可使用本地的缓存。\n协商缓存一般是这样一个流程：")]),a._v(" "),t("ol",[t("li",[a._v("把资源标识，比如 If-Modify-Since 或 Etag 发送到服务器，确认资源是否更新；")]),a._v(" "),t("li",[a._v("如果资源未更新，请求响应返回的http状态为 304 并且会显示一个 Not Modified 的字符串，告诉浏览器使用本地缓存;")]),a._v(" "),t("li",[a._v("如果资源已经更新，返回新的数据；")]),a._v(" "),t("li",[a._v("将新数据存入缓存。")])]),a._v(" "),t("h3",{attrs:{id:"last-modified-if-modified-since"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since"}},[a._v("#")]),a._v(" Last-Modified，If-Modified-Since")]),a._v(" "),t("p",[a._v("浏览器第一次请求资源的时候，"),t("code",[a._v("服务器")]),a._v("返回的 header 上会带有一个 "),t("code",[a._v("Last-Modified")]),a._v("字段，表示资源最后修改的时间。")]),a._v(" "),t("p",[a._v("当浏览器再次请求该资源时，请求头中会带有一个 "),t("code",[a._v("If-Modified-Since")]),a._v(" 字段，这个值是第一次请求返回的 "),t("code",[a._v("Last-Modified")]),a._v("的值")]),a._v(" "),t("h3",{attrs:{id:"etag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[a._v("#")]),a._v(" Etag")]),a._v(" "),t("p",[t("code",[a._v("Etag")]),a._v(" 一般是由文件内容 "),t("code",[a._v("hash")]),a._v(" 生成的，也就是说它可以保证资源的唯一性，资源发生改变就会导致 "),t("code",[a._v("Etag")]),a._v(" 发生改变。")])])}),[],!1,null,null,null);e.default=s.exports}}]);