(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{810:function(t,a,s){"use strict";s.r(a);var r=s(6),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"纯函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#纯函数"}},[t._v("#")]),t._v(" 纯函数")]),t._v(" "),s("blockquote",[s("p",[t._v("纯函数是这样一种函数，即相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用")])]),t._v(" "),s("p",[t._v("函数的输出结果只和传入参数有关，函数不会去影响外面的值，外面的值也不会影响函数的结果")]),t._v(" "),s("h3",{attrs:{id:"纯函数的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#纯函数的好处"}},[t._v("#")]),t._v(" 纯函数的好处")]),t._v(" "),s("h4",{attrs:{id:"可缓存性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可缓存性"}},[t._v("#")]),t._v(" 可缓存性")]),t._v(" "),s("p",[t._v("要是相同的参数返回相同结果，就可以根据参数将结果缓存起来")]),t._v(" "),s("h4",{attrs:{id:"可测试性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可测试性"}},[t._v("#")]),t._v(" 可测试性")]),t._v(" "),s("p",[t._v("测试只要对函数添加相应的模拟值就可以测试了")]),t._v(" "),s("h4",{attrs:{id:"逻辑清晰"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑清晰"}},[t._v("#")]),t._v(" 逻辑清晰")]),t._v(" "),s("p",[t._v("从函数的参数就知道了它需要什么值，对于编程人员比较容易理解")]),t._v(" "),s("h2",{attrs:{id:"柯里化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#柯里化"}},[t._v("#")]),t._v(" 柯里化")]),t._v(" "),s("h2",{attrs:{id:"高阶函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数"}},[t._v("#")]),t._v(" 高阶函数")]),t._v(" "),s("blockquote",[s("p",[t._v("参数或者返回值是函数的函数")])])])}),[],!1,null,null,null);a.default=e.exports}}]);