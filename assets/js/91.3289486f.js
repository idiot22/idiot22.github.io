(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{809:function(t,a,r){"use strict";r.r(a);var e=r(6),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),r("ol",[r("li",[t._v("Mobx 是一个功能强大，上手非常容易的状态管理工具。")]),t._v(" "),r("li",[t._v("Mobx 背后的哲学很简单：任何源自应用状态的东西都应该自动地获得。")]),t._v(" "),r("li",[t._v("Mobx 利用 getter 和 setter 来收集组件的数据依赖关系，从而在数据发生变化的时\n候精确知道哪些组件需要重绘，在界面的规模变大的时候，往往会有很多细粒度更新。( vue 类似）")])]),t._v(" "),r("h2",{attrs:{id:"mobx和redux的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mobx和redux的区别"}},[t._v("#")]),t._v(" mobx和redux的区别")]),t._v(" "),r("h3",{attrs:{id:"mobx-写法上更偏向于-oop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mobx-写法上更偏向于-oop"}},[t._v("#")]),t._v(" Mobx 写法上更偏向于 OOP")]),t._v(" "),r("ol",[r("li",[t._v("对一份数据直接进行修改操作，不需要始终返回一个新的数据")]),t._v(" "),r("li",[t._v("并非单一 store ，可以多 store 。")]),t._v(" "),r("li",[t._v("Redux 默认以 JavaScript 原生对象形式存储数据，而 Mobx 使用可观察对象．")])]),t._v(" "),r("h3",{attrs:{id:"优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),r("ol",[r("li",[t._v("学习成本小")]),t._v(" "),r("li",[t._v("面向对象编程而且对 TS 友好")])]),t._v(" "),r("h3",{attrs:{id:"缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),r("ol",[r("li",[t._v("过于自由： Mobx 提供的约定及模版代码很少，代码编写很自由，如果不做一些约\n定，比较容易导致团队代码风格不统一，")]),t._v(" "),r("li",[t._v("相关的中间件很少，逻辑层业务整合是问题")])])])}),[],!1,null,null,null);a.default=s.exports}}]);